@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using Demo.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

<Loader Load=@Loader T="WeatherForecast[]">
    <Loading>
        <p><em>Loading...</em></p>
    </Loading>
    <Loaded Context="forecasts">
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    </Loaded>
    <Failed>
        <p><em>Uhoh...</em></p>
    </Failed>
</Loader>

@code {
    private async void Loader(Dispatch dispatch)
    {
        try
        {
            var forcasts = await this.ForecastService.GetForecastAsync(DateTime.Now);

            dispatch(new Loaded<WeatherForecast[]>(forcasts));
        }
        catch (Exception ex)
        {
            dispatch(new Failed<WeatherForecast[]>(ex));
        }
    }
}
